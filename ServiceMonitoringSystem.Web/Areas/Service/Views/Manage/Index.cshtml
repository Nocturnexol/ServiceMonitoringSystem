@{
    ViewBag.Title = "Index";
    var F = Html.F();
}

@model IEnumerable<ServiceEntity>


@section body {

    @(F.Panel()
          .ID("Panel1")
          .ShowBorder(false)
          .ShowHeader(false)
          .Layout(LayoutType.Region)
          .IsViewPort(true)
          .Items(
              F.Panel()
                  .ID("panel3")
                  .RegionPosition(Position.Left)
                  .RegionSplit(true)
                  .EnableCollapse(true)
                  .Width(200)
                  .Title("服务")
                  .ShowBorder(true)
                  .ShowHeader(true)
                  .BodyPadding(5)
                  .Items(
                      F.Tree()
                                          .ID("Tree1").Listener("nodeclick", "onNodeClick")
                                  .Width(200).HideHScrollbar(false).HideVScrollbar(false)
                          .ShowHeader(false)
                          .EnableCollapse(true)
                                  .Nodes(ViewBag.TreeNodes)
                  ),
              F.Panel()
                  .ID("panelCenterRegion")
                  .RegionPosition(Position.Center)
                  .Layout(LayoutType.VBox)
                  .Title("服务列表").EnableCollapse(true)
                  .ShowBorder(true)
                  .ShowHeader(true)
                  .BodyPadding(5)
                  .Items(
                      F.Form()
                          .ID("Form1")
                          .ShowHeader(false)
                          .ShowBorder(false)
                          .Rows(
                              F.FormRow()
                                  .Items(
                                      F.DropDownList()
                                          .ID("ddlHost")
                                          .EnableEdit(true).Items(ViewBag.ddlHost),
                                      F.TextBox()
                                          .ID("tbxKey")
                                          .EmptyText("关键字"),
                                      F.RadioButtonList().ID("rblApprove")
                                          .Items(
                                              F.RadioItem()
                                                  .Text("全部").Selected(true),
                                              F.RadioItem()
                                                  .Text("已审核")
                                                  .Value("1"),
                                              F.RadioItem()
                                                  .Text("未审核")
                                                  .Value("0")
                                          ),
                                      F.Button()
                                          .ID("btnSearch")
                                          .Text("检索")
                                          .OnClick(Url.Action("DoSearch"), "Form1,Grid1"),
                                      F.Button()
                                          .ID("btnReset")
                                          .Text("重置")
                                          .OnClientClick("F.ui.Form1.reset();")
                                  )
                          ),
                      F.Grid()
                          .BoxFlex(1)
                          .ShowHeader(false)
                          .ShowBorder(true)
                          .ID("Grid1")
                          .DataIDField("_id")
                          .DataTextField("Name")
                          .EnableCheckBoxSelect(true)
                          .AllowPaging(true).AllowSorting(true).OnSort(Url.Action("DoSearch"), "Grid1")
                          .PageSize(ViewBag.PageSize)
                          .IsDatabasePaging(true)
                          .OnPageIndexChanged(Url.Action("DoSearch"), "Form1,Grid1")
                          .Toolbars(
                              F.Toolbar()
                                  .Items(
                                      F.Button()
                                          .ID("btnDeleteSelected")
                                          .Icon(Icon.Delete)
                                          .Text("删除选中记录")
                                          .Listener("click", "onDeleteSelectedClick"),
                                                  F.Button()
                                                  .ID("btnExport")
                                                  .Icon(Icon.PageExcel)
                                                  .Text("导出")
                                                          .Listener("click", "onExportClick"),
                                      F.ToolbarFill(),
                                      F.Button()
                                          .ID("btnCreate")
                                          .Icon(Icon.Add)
                                          .Text("添加")
                                          .Listener("click", "onCreateClick")
                                  )
                          )
                          .Columns(
                              F.RowNumberField(),
                              F.RenderField()
                                  .HeaderText("服务名称").Width(80).SortField("ServiceName")
                                  .DataField("ServiceName"),
                              F.RenderField()
                                  .HeaderText("二级服务名称").Width(80).SortField("SecondaryName")
                                  .DataField("SecondaryName"),
                              F.RenderField()
                                  .HeaderText("部署机器").Width(80)
                                  .DataField("Host"),
                              F.RenderField()
                                  .HeaderText("内网地址").Width(80).RendererFunction("renderInIp")
                                  .DataField("RegContent"),
                              F.RenderField()
                                  .HeaderText("外网地址").Width(80).RendererFunction("renderOutIp")
                                  .DataField("RegContent"),
                              F.RenderField()
                                  .HeaderText("服务ID").Width(50).SortField("PrimaryId")
                                  .DataField("PrimaryId"),
                              F.RenderField()
                                  .HeaderText("二级服务ID").Width(50).SortField("SecondaryId")
                                  .DataField("SecondaryId"),
                              F.RenderField()
                                  .HeaderText("最近启动时间").Width(80).SortField("StartupDate")
                                  .DataField("StartupDate").FieldType(FieldType.Date)
                                  .Renderer(Renderer.Date)
                                  .RendererArgument("yyyy-MM-dd HH:mm"),
                              F.RenderCheckField().RenderAsStaticField(true)
                                  .HeaderText("是否审核").Width(50).SortField("IsApproved")
                                  .DataField("IsApproved"),
                              F.RenderCheckField().RenderAsStaticField(true)
                                  .HeaderText("是否启用报警").Width(50).SortField("IsAlert")
                                  .DataField("IsAlert"),
                              F.RenderField()
                                  .HeaderText("版本").Width(50).SortField("Version")
                                  .DataField("Version"),
                              F.RenderField()
                                  .HeaderText("备注").Width(80)
                                  .DataField("Remark").ExpandUnusedSpace(true),
                              F.RenderField()
                                  .HeaderText("")
                                  .Width(30)
                                  .RendererFunction("renderEditField")
                                  .TextAlign(TextAlign.Center)
                                  .EnableHeaderMenu(false)
                                  .EnableColumnHide(false),
                                          F.RenderField()
                                          .HeaderText("")
                                          .Width(30)
                                          .RendererFunction("renderDetailField")
                                          .TextAlign(TextAlign.Center)
                                          .EnableHeaderMenu(false)
                                          .EnableColumnHide(false),
                              F.RenderField()
                                  .HeaderText("")
                                  .Width(30)
                                  .RendererFunction("renderDeleteField")
                                  .TextAlign(TextAlign.Center)
                                  .EnableHeaderMenu(false)
                                  .EnableColumnHide(false),
                                      F.RenderField()
                                          .HeaderText("")
                                          .Width(30)
                                          .RendererFunction("renderApproveField")
                                          .TextAlign(TextAlign.Center)
                                          .EnableHeaderMenu(false)
                                          .EnableColumnHide(false)
                          )
                          .RecordCount(ViewBag.RecordCount)
                                  .DataSource(Model).RowDataBoundFunction("onGrid1RowDataBound")

                  )

          )
          )

    @(F.Window()
          .ID("Window1")
          .Width(600)
          .Height(300)
          .IsModal(true)
          .Hidden(true)
          .Target(Target.Top)
          .EnableResize(true)
          .EnableMaximize(true)
          .EnableIFrame(true)
          .IFrameUrl(Url.Content("about:blank"))
          .OnClose(Url.Action("DoSearch"), "Form1,Grid1")
          )

}

@section script {

    <script>
        function onGrid1RowDataBound(rowData) {
            var rowValues = rowData.values;
            var isApproved = rowValues['IsApproved'];
            if (isApproved) {
                rowValues['SecondaryId.cls'] = 'green';
                console.log(rowValues);
            } else {
                rowValues['SecondaryId.cls'] = 'colorred';
            }
        }

        function onNodeClick(event, nodeId) {
            var tree = this;
            if (nodeId !== '') {
                var nodeData = tree.getNodeData(nodeId);
                // 触发后台事件
                F.doPostBack('@Url.Action("DoSearch")',
                {
                    nodeId: nodeId,
                    nodeText: nodeData.text,
                    ddlHost: $("#ddlHost-inputEl").val(),
                    tbxKey: $("#tbxKey-inputEl").val(),
                    rblApprove: $("#rblApprove").val()
                });
            }
        }

        function renderInIp(value) {
            if (value === '') return null;
            var content = $.parseJSON(value);
            var ips = content.InAddr;
            return ips.join(',');
        }
        function renderOutIp(value) {
            if (value === '') return null;
            var content = $.parseJSON(value);
            var ips = content.OutAddr;
            return ips.join(',');
        }

        @*function renderBoolean(value) {
            var iconUrl = value === true ? '@Url.Content(IconHelper.GetIconUrl(Icon.BulletTick))' : '@Url.Content(IconHelper.GetIconUrl(Icon.BulletCross))';
            return '<img src=\"'+iconUrl+'\"/>';
        }*@
        function renderApproveField(parameters) {
            return '<a href="javascript:;" class="approvefield"><img class="f-grid-cell-icon" src="@Url.Content("~/res/icon/book.png")"></a>';
        }

        function renderDeleteField(value, params) {
            return '<a href="javascript:;" class="deletefield"><img class="f-grid-cell-icon" src="@Url.Content("~/res/icon/delete.png")"></a>';
        }

        function renderEditField(value, params) {
            return '<a href="javascript:;" class="editfield"><img class="f-grid-cell-icon" src="@Url.Content("~/res/icon/pencil.png")"></a>';
        }

        function renderDetailField() {
            return '<a href="javascript:;" class="detailfield"><img class="f-grid-cell-icon" src="@Url.Content("~/res/icon/application_view_detail.png")"></a>';
        }
        function onCreateClick(event) {
            F.ui.Window1.show('@Url.Content("~/Service/Manage/AddOrEdit")', '新增服务');
        }

        function onExportClick() {
            window.location.href = '@Url.Action("ExportToExcel")';
        }

        function deleteSelectedRows(selectedRows) {
            // 触发后台事件
            F.doPostBack('@Url.Action("Delete")',
                'Form1,Grid1',
                {
                    'selectedRows': selectedRows
                });
        }

        function onDeleteSelectedClick(event) {
            var grid1 = F.ui.Grid1;

            if (!grid1.hasSelection()) {
                F.alert('请至少选择一项！');
                return;
            }

            var selectedRows = grid1.getSelectedRows();
            console.log(selectedRows);
            F.confirm({
                message: '你确定要删除选中的&nbsp;<b>' + selectedRows.length + '</b>&nbsp;行数据吗？',
                target: '_top',
                ok: function () {
                    deleteSelectedRows(selectedRows);
                }
            });
        }

        F.ready(function () {

            var grid1 = F.ui.Grid1;

            grid1.el.on('click',
                'a.deletefield',
                function (event) {
                    var rowEl = $(this).closest('.f-grid-row');
                    var rowData = grid1.getRowData(rowEl);
                    console.log(rowData);
                    F.confirm({
                        message: '你确定要删除选中的行数据吗？',
                        target: '_top',
                        ok: function () {
                            deleteSelectedRows([rowData.id]);
                        }
                    });
                });

            grid1.el.on('click',
                'a.editfield',
                function (event) {
                    var rowEl = $(this).closest('.f-grid-row');
                    var rowData = grid1.getRowData(rowEl);

                    F.ui.Window1.show('@Url.Content("~/Service/Manage/AddOrEdit/")?id=' + rowData.id, '编辑服务');
                });

            grid1.el.on('click',
                'a.detailfield',
                function (event) {
                    var rowEl = $(this).closest('.f-grid-row');
                    var rowData = grid1.getRowData(rowEl);
                    parent.addExampleTab({
                        id: 'serviceDetail_tab',
                        iframeUrl: '@Url.Content("~/Service/Manage/Detail/")' + rowData.id,
                        title: '服务详情',
                        refreshWhenExist: true
                    });
                });

        });


    </script>
}
