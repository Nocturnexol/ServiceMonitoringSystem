@{
    ViewBag.Title = "首页";
    var F = @Html.F();
}

@section head {

    <link type="text/css" rel="stylesheet" href="~/res/css/default.css" />

}

@section body {


    <div id="header" class="ui-widget-header f-mainheader">
        <table>
            <tr>
                <td>
                    @(F.Button()
                          //.OnClientClick("window.open('http://fineui.com/mvc/','_blank');")
                          .EnableDefaultCorner(false)
                          .EnableDefaultState(false)
                          .IconFont(IconFont.Home)
                          .IconAlign(IconAlign.Top)
                          .ToolTip("官网首页")
                          .ID("btnHomePage")
                          .CssClass("icononlyaction")
                          )
                    <a class="logo" href="#">
                        服务监测系统
                    </a>
                </td>
                <td style="text-align: right;">

                    @(F.Button()
                          .EnableDefaultCorner(false)
                          .EnableDefaultState(false)
                          .IconFont(IconFont.Bank)
                          .IconAlign(IconAlign.Top)
                          .Text("主题仓库")
                          .ID("btnThemeSelect")
                          .CssClass("icontopaction themes")
                          .Listener("click", "onThemeSelectClick")
                          )

                    @(F.Button()
                          .EnableDefaultCorner(false)
                          .EnableDefaultState(false)
                          .IconAlign(IconAlign.Left)
                          //.IconUrl(Url.Content("~/res/images/my_face_80.jpg"))
                          .Text("admin")
                          .CssClass("userpicaction")
                          .Menu(F.Menu()
                              .Items(
                                  F.MenuButton()
                                      .IconFont(IconFont.User)
                                      .Text("个人信息")
                                      .Listener("click", "F.alert('尚未实现');"),
                                  F.MenuSeparator(),
                                  F.MenuButton()
                                      .IconFont(IconFont.SignOut)
                                      .Text("安全退出")
                                      .OnClick(Url.Action("onSignOut_Click"))
                              )
                          )
                          )
                </td>
            </tr>
        </table>
    </div>

    <div id="maincontent">
        <h2>FineUIMvc</h2>
        基于 jQuery 的专业 ASP.NET MVC 控件库

        <br/>
        <h2>支持的浏览器</h2>
        Chrome、Firefox、Safari、Edge、IE8.0+

        <br/>
        <h2>授权协议</h2>
        商业授权

        <br/>
        <h2>相关链接</h2>
        <ul class="list">
            <li>
                首页：<a target="_blank" href="http://fineui.com/mvc/">http://fineui.com/mvc/</a>
            </li>
            <li>
                示例：<a target="_blank" href="http://fineui.com/demo_mvc/">http://fineui.com/demo_mvc/</a>
            </li>
            <li>
                更新：<a target="_blank" href="http://fineui.com/version_mvc/">http://fineui.com/version_mvc/</a>
            </li>
            <li>
                论坛：<a target="_blank" href="http://fineui.com/bbs/">http://fineui.com/bbs/</a>
            </li>
        </ul>

    </div>

    @(F.RegionPanel()
          .ID("RegionPanel1")
          .ShowBorder(false)
          .IsViewPort(true)
          .Regions(
              F.Region()
                  .ID("Region1")
                  .ShowBorder(false)
                  .ShowHeader(false)
                  .RegionPosition(Position.Top)
                  .Layout(LayoutType.Fit)
                  .ContentEl("#header"),
              F.Region()
                  .ID("Region2")
                  .RegionSplit(true)
                  .Width(200)
                  .ShowHeader(true)
                  .Title("菜单")
                  .EnableCollapse(true)
                  .Layout(LayoutType.Fit)
                  .RegionPosition(Position.Left)
                  .Items(
                      F.Tree()
                          .ShowBorder(false)
                          .ShowHeader(false)
                          .ID("treeMenu")
                          .Nodes(
                              F.TreeNode()
                                  .Text("服务管理")
                                  .Expanded(true)
                                          .Nodes(
                                              F.TreeNode()
                                                  .Text("服务管理")
                                                  .NavigateUrl("~/Service/Manage?type=1"),
                                      F.TreeNode()
                                          .Text("服务名称管理")
                                          .NavigateUrl("~/Service/GroupName"),
                                      F.TreeNode()
                                          .Text("基础类型")
                                          .NavigateUrl("~/Service/BasicType"),
                                      F.TreeNode()
                                          .Text("联系人")
                                          .NavigateUrl("~/Service/AppContacts")
                                  )
                          )
                  ),
              F.Region()
                  .ID("mainRegion")
                  .ShowHeader(false)
                  .Layout(LayoutType.Fit)
                  .RegionPosition(Position.Center)
                  .Items(
                      F.TabStrip()
                          .ID("mainTabStrip")
                          .EnableTabCloseMenu(true)
                          .ShowBorder(false)
                          .Tabs(
                              F.Tab()
                                  .ID("Tab1")
                                  .Title("首页")
                                  .BodyPadding(10)
                                  .Layout(LayoutType.Fit)
                                  .Icon(Icon.House)
                                  .ContentEl("#maincontent")
                                  ).Tools(
                            F.Tool()
                                .ID("toolRefresh")
                                .ToolTip("刷新本页")
                                .CssClass("tabtool")
                                .MarginRight(5)
                                .IconFont(IconFont.Refresh)
                                .Listener("click", "onToolRefreshClick"),
                            F.Tool()
                                .ID("toolNewWindow")
                                .ToolTip("在新标签页中打开")
                                .CssClass("tabtool")
                                .MarginRight(5)
                                .IconFont(IconFont.Share)
                                .Listener("click", "onToolNewWindowClick")
                        )
                  )
          )
          )

    @(F.Window()
          .Hidden(true)
          .EnableResize(true)
          .EnableMaximize(true)
          .EnableClose(true)
          .Height(600)
          .Width(1020)
          .IsModal(true)
          .ClearIFrameAfterClose(false)
          .IFrameUrl(Url.Content("~/Home/Themes"))
          .EnableIFrame(true)
          .Title("主题仓库")
          .ID("windowThemeRoller")
          )

}

@section script {

    <script>

        // 点击主题仓库
        function onThemeSelectClick(event) {
            F.ui.windowThemeRoller.show();
        }

        // 点击标题栏工具图标 - 刷新
        function onToolRefreshClick(event) {
            var mainTabStrip = F.ui.mainTabStrip;

            var activeTab = mainTabStrip.getActiveTab();
            if (activeTab.iframe) {
                var iframeWnd = activeTab.getIFrameWindow();
                iframeWnd.location.reload();
            }
        }

        // 点击标题栏工具图标 - 在新标签页中打开
        function onToolNewWindowClick(event) {
            var mainTabStrip = F.ui.mainTabStrip;

            var activeTab = mainTabStrip.getActiveTab();
            if (activeTab.iframe) {
                var iframeUrl = activeTab.getIFrameUrl();
                iframeUrl = iframeUrl.replace(/Mobile\/\?file=/ig, '');
                window.open(iframeUrl, '_blank');
            }
        }


        // 添加示例标签页
        // id： 选项卡ID
        // iframeUrl: 选项卡IFrame地址
        // title： 选项卡标题
        // icon： 选项卡图标
        // createToolbar： 创建选项卡前的回调函数（接受tabOptions参数）
        // refreshWhenExist： 添加选项卡时，如果选项卡已经存在，是否刷新内部IFrame
        // iconFont： 选项卡图标字体
        function addExampleTab(tabOptions) {

            if (typeof (tabOptions) === 'string') {
                tabOptions = {
                    id: arguments[0],
                    iframeUrl: arguments[1],
                    title: arguments[2],
                    icon: arguments[3],
                    createToolbar: arguments[4],
                    refreshWhenExist: arguments[5],
                    iconFont: arguments[6]
                };
            }

            F.addMainTab(F.ui.mainTabStrip, tabOptions);
        }

        // 页面控件初始化完毕后，会调用用户自定义的onReady函数
        F.ready(function () {

            // 初始化主框架中的树和选项卡互动，以及地址栏的更新
            // treeMenu： 主框架中的树控件实例，或者内嵌树控件的手风琴控件实例
            // mainTabStrip： 选项卡实例
            // updateHash: 切换Tab时，是否更新地址栏Hash值（默认值：true）
            // refreshWhenExist： 添加选项卡时，如果选项卡已经存在，是否刷新内部IFrame（默认值：false）
            // refreshWhenTabChange: 切换选项卡时，是否刷新内部IFrame（默认值：false）
            // maxTabCount: 最大允许打开的选项卡数量
            // maxTabMessage: 超过最大允许打开选项卡数量时的提示信息
            F.initTreeTabStrip(F.ui.treeMenu, F.ui.mainTabStrip, {
                maxTabCount: 10,
                maxTabMessage: '请先关闭一些选项卡（最多允许打开 10 个）！'
            });

        });
    </script>
}
